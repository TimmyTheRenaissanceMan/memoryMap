[{"/home/timur/Documents/Work/Memory Map/client/src/index.js":"1","/home/timur/Documents/Work/Memory Map/client/src/App.js":"2","/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx":"3","/home/timur/Documents/Work/Memory Map/client/src/components/partials/footer.jsx":"4","/home/timur/Documents/Work/Memory Map/client/src/components/map/StoreData.jsx":"5","/home/timur/Documents/Work/Memory Map/client/src/components/map/StoreCard.jsx":"6","/home/timur/Documents/Work/Memory Map/client/src/components/map/mapStyles.jsx":"7","/home/timur/Documents/Work/Memory Map/client/src/components/partials/navMenu.jsx":"8","/home/timur/Documents/Work/Memory Map/client/src/components/partials/header.jsx":"9","/home/timur/Documents/Work/Memory Map/client/src/routes/List.jsx":"10","/home/timur/Documents/Work/Memory Map/client/src/store.js":"11","/home/timur/Documents/Work/Memory Map/client/src/reducer.js":"12"},{"size":363,"mtime":1651010307093,"results":"13","hashOfConfig":"14"},{"size":837,"mtime":1651007657363,"results":"15","hashOfConfig":"14"},{"size":4127,"mtime":1651048111301,"results":"16","hashOfConfig":"14"},{"size":687,"mtime":1650919325149,"results":"17","hashOfConfig":"14"},{"size":547,"mtime":1650954154789,"results":"18","hashOfConfig":"14"},{"size":894,"mtime":1650952221925,"results":"19","hashOfConfig":"14"},{"size":626,"mtime":1650952264776,"results":"20","hashOfConfig":"14"},{"size":6734,"mtime":1651011513854,"results":"21","hashOfConfig":"14"},{"size":5653,"mtime":1650990034483,"results":"22","hashOfConfig":"14"},{"size":1950,"mtime":1651009157417,"results":"23","hashOfConfig":"14"},{"size":127,"mtime":1651010046146,"results":"24","hashOfConfig":"14"},{"size":328,"mtime":1651009586816,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xqsaek",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/timur/Documents/Work/Memory Map/client/src/index.js",[],[],"/home/timur/Documents/Work/Memory Map/client/src/App.js",["68"],[],"import { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\"\n\nimport Header from './components/partials/header';\nimport Footer from './components/partials/footer';\nimport Home from './routes/Home';\nimport List from './routes/List';\n\nfunction App() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const resizeFunction = () => {\n    setWindowWidth(()=> {return window.innerWidth});\n  };\n\n  window.addEventListener('resize', function(event) {\n    resizeFunction();\n}, true)\n\n\n  return (\n    <div className=\"App\">\n    <Header windowWidth={windowWidth} />\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/list\" element={<List />} />\n      </Routes>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx",[],[],"/home/timur/Documents/Work/Memory Map/client/src/components/partials/footer.jsx",["69","70","71"],[],"export default function Footer() {\n  return (\n    <footer style={{marginTop: \"500px\" }}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-10 mx-auto\">\n            <ul className=\"list-inline text-center\">\n              <li className=\"list-inline-item\">\n                <a href=\"#\">Footer Link 1</a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"#\">Footer Link 2</a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"#\">Footer Link 3</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n",[],"/home/timur/Documents/Work/Memory Map/client/src/components/map/StoreData.jsx",["72"],[],"/home/timur/Documents/Work/Memory Map/client/src/components/map/StoreCard.jsx",[],[],"/home/timur/Documents/Work/Memory Map/client/src/components/map/mapStyles.jsx",["73"],[],"export default [\n\n  {\n      \"featureType\": \"road.highway\",\n      \"stylers\": [\n          {\n              \"hue\": \"#ff0011\"\n          },\n          {\n              \"lightness\": 53\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi.park\",\n      \"stylers\": [\n          {\n              \"hue\": \"#00ff91\"\n          }\n      ]\n  },\n  {\n      \"elementType\": \"labels\",\n      \"stylers\": [\n          {\n              \"lightness\": 63\n          },\n          {\n              \"hue\": \"#ff0000\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"stylers\": [\n          {\n              \"hue\": \"#0055ff\"\n          }\n      ]\n  },\n\n];","/home/timur/Documents/Work/Memory Map/client/src/components/partials/navMenu.jsx",["74","75","76","77","78","79"],[],"/home/timur/Documents/Work/Memory Map/client/src/components/partials/header.jsx",["80","81","82","83","84","85","86","87","88"],[],"import React, { useState, useEffect } from \"react\";\nimport { Navbar, Container, Row, Col, NavItem, Nav } from \"react-bootstrap\";\nimport NavMenu from \"./navMenu\";\n\nfunction Header(props) {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [screenType, setScreenType] = useState();\n\n  function reportWindowSize() {\n    if (window.innerWidth > 795 && screenType == \"mobile\") {\n      setScreenType(\"full\");\n    } else if (window.innerWidth <= 795 && screenType == \"full\") {\n      setScreenType(\"mobile\");\n    }\n  }\n\n  if (props.windowWidth != windowWidth) {\n    reportWindowSize();\n    setWindowWidth(props.windowWidth);\n  }\n\n  useEffect(() => {\n    window.innerWidth > 795 ? setScreenType(\"full\") : setScreenType(\"mobile\");\n  }, []);\n\n  const [sideNavClass, setSideNavClass] = useState(\"\");\n\n  function openNav() {\n    setSideNavClass(\"sidenavOpen\");\n    document.getElementById(\"main\").style.marginLeft = \"100%\";\n    document.getElementById(\"mySidenav\").style.width = \"100%\";\n  }\n\n  /* Set the width of the side navigation to 0 and the left margin of the page content to 0, and the background color of body to white */\n  function closeNav() {\n    setSideNavClass(\"sidenavClose\");\n    setTimeout(() => {\n      document.getElementById(\"mySidenav\").style.width = \"0\";\n      document.getElementById(\"main\").style.marginLeft = \"0\";\n    }, 500);\n  }\n\n  return window.location.pathname == \"/\" ?(\n   screenType == \"full\" ? (\n    <FullScreen\n      openNav={openNav}\n      closeNav={closeNav}\n      sideNavClass={sideNavClass}\n    />\n  ) : (\n    <MobileScreen\n      openNav={openNav}\n      closeNav={closeNav}\n      sideNavClass={sideNavClass}\n    />\n  )\n  ) : \n  (<AutoHeader />)\n}\n\nconst FullScreen = (props) => {\n  return (\n    <div className=\"mapHeaderContainer\" style={{ width: \"100%\" }}>\n      <Navbar className=\"p-3\" style={{ padding: \"0\" }} bg=\"\" expand=\"sm\">\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"\">\n            {\" \"}\n            <img src=\"./logo.png\" className=\"brandLogo\" />\n          </Navbar.Brand>\n          <Nav className=\"ms-auto\">\n            <Nav.Link className=\"me-2\" href=\"/\">\n              Map\n            </Nav.Link>\n            <Nav.Link className=\"me-2\" href=\"/list\">\n              List\n            </Nav.Link>\n            <Nav.Link className=\"me-2\" href=\"/\">\n              About\n            </Nav.Link>\n            <Nav.Link className=\"me-5\" href=\"/\">\n              Contact\n            </Nav.Link>\n            <div className=\"addMarker\" onClick={props.openNav}>\n              <div className=\"addMarkerText\">+</div>\n            </div>\n          </Nav>\n        </Container>\n      </Navbar>\n\n      <Row id=\"mySidenav\" className=\"sidenav\">\n        <Col md=\"6\" lg=\"7\" xl=\"8\"></Col>\n        <Col md=\"6\" lg=\"5\" xl=\"4\" className=\"sidenavContent\">\n          <Container>\n            <NavMenu closeNav={props.closeNav} />\n          </Container>\n        </Col>\n      </Row>\n      <div id=\"main\" hidden></div>\n    </div>\n  );\n};\n\nconst MobileScreen = (props) => {\n  return (\n    <div className=\"mapHeaderContainer\" style={{ width: \"100%\" }}>\n      <Navbar\n        className=\"p-3\"\n        style={{ padding: \"0\", pointerEvents: \"none\" }}\n        bg=\"\"\n        expand=\"lg\"\n      >\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"\">\n            {\" \"}\n            <img src=\"./logo.png\" className=\"brandLogo\" />\n          </Navbar.Brand>\n          <Nav className=\"ms-auto\">\n            <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              Map\n            </Nav.Link>\n            <Nav.Link href=\"/list\" style={{ pointerEvents: \"visible\" }}>\n              List\n            </Nav.Link>\n            <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              About\n            </Nav.Link>\n            <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              Contact\n            </Nav.Link>\n            <div\n              className=\"addMarker mt-3\"\n              onClick={props.openNav}\n              style={{ pointerEvents: \"visible\" }}\n            >\n              <div className=\"addMarkerText\">+</div>\n            </div>\n          </Nav>\n        </Container>\n      </Navbar>\n\n      <Row id=\"mySidenav\" className=\"sidenav\">\n        <Col md=\"6\" lg=\"7\" xl=\"8\"></Col>\n        <Col md=\"6\" lg=\"5\" xl=\"4\" className=\"sidenavContent\">\n          <Container>\n            <NavMenu closeNav={props.closeNav} />\n          </Container>\n        </Col>\n      </Row>\n      <div id=\"main\" hidden></div>\n    </div>\n  );\n};\n\n// HEADER THAT'S USED ON ALL THE PAGES OTHER THAN MAP\nconst AutoHeader = () => {\n\n  return  <div style={{ width: \"100%\" }}>\n      <Navbar\n        className=\" p-3 bg-white rounded\"\n        style={{ padding: \"0\" }}\n        bg=\"light\"\n        expand=\"sm\"\n      >\n        <Container>\n        <Navbar.Brand href=\"/\" className=\"\">\n            {\" \"}\n            <img src=\"./logo.png\" className=\"brandLogo\" />\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ms-auto\">\n\n          <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              Map\n            </Nav.Link>\n            <Nav.Link href=\"/list\" style={{ pointerEvents: \"visible\" }}>\n              List\n            </Nav.Link>\n            <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              About\n            </Nav.Link>\n            <Nav.Link href=\"/\" style={{ pointerEvents: \"visible\" }}>\n              Contact\n            </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n\n        </Container>\n      </Navbar>\n    </div>\n}\n\nexport default Header;\n","/home/timur/Documents/Work/Memory Map/client/src/routes/List.jsx",["89"],[],"import React, { useState, useEffect } from \"react\";\nimport { Container, Card } from \"react-bootstrap/\";\n\nconst List = () => {\n  const [markers, setMarkers] = useState([]);\n  const s3URL = \"https://timur-dev-test.s3.ca-central-1.amazonaws.com/\";\n\n  const getMarkers = async () => {\n    const response = await fetch(\"/api/marker\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const data = await response.json();\n    if (data) {\n      console.log(data);\n      setMarkers(data);\n    }\n  };\n\n  useEffect(() => {\n    getMarkers();\n  }, []);\n\n  return (\n    <Container className=\"pe-5 ps-5\" style={{ paddingTop: \"200px\", paddingBottom: \"100px\" }}>\n      {markers.map((marker, index) => {\n        return (\n          <Card className=\"mt-3\" style={{borderRadius: \"15px\"}}>\n            <Card.Body>\n              <p className=\"text-start bold900 fs14\">\n  \n                <span className=\"darkBlueText\">{marker.location}</span> <span className=\"greyText\">by {marker.name}</span>\n                \n              </p>\n              <p className=\"text-start bold900 greyText fs12\">\n                <span>{marker.lat.toFixed(5)}</span>\n                <span className=\"ms-3\">{marker.lng.toFixed(5)}</span>\n              </p>\n              <p className=\"text-start fs14 fontForum\">{marker.message}</p>\n              {marker.image ? (\n                <img\n                  className=\"float-start\"\n                  src={s3URL + \"images/\" + marker._id}\n                />\n              ) : (\n                \"\"\n              )}\n              {marker.audio ? (\n                <audio controls style={{width:\"100%\"}}>\n                  <source src={s3URL + \"audio/\" + marker._id} />\n                </audio>\n              ) : (\n                \"\"\n              )}\n            </Card.Body>\n          </Card>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default List;\n","/home/timur/Documents/Work/Memory Map/client/src/store.js",[],[],"/home/timur/Documents/Work/Memory Map/client/src/reducer.js",[],[],{"ruleId":"90","severity":1,"message":"91","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":9,"column":17,"nodeType":"96","endLine":9,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":12,"column":17,"nodeType":"96","endLine":12,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":15,"column":17,"nodeType":"96","endLine":15,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","endLine":21,"endColumn":3},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","endLine":42,"endColumn":3},{"ruleId":"90","severity":1,"message":"100","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":19},{"ruleId":"90","severity":1,"message":"101","line":22,"column":9,"nodeType":"92","messageId":"93","endLine":22,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":23,"column":15,"nodeType":"104","messageId":"105","endLine":23,"endColumn":17},{"ruleId":"90","severity":1,"message":"106","line":29,"column":11,"nodeType":"92","messageId":"93","endLine":29,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":74,"column":30,"nodeType":"104","messageId":"105","endLine":74,"endColumn":32},{"ruleId":"94","severity":1,"message":"107","line":106,"column":11,"nodeType":"96","endLine":106,"endColumn":60},{"ruleId":"90","severity":1,"message":"108","line":2,"column":39,"nodeType":"92","messageId":"93","endLine":2,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":10,"column":47,"nodeType":"104","messageId":"105","endLine":10,"endColumn":49},{"ruleId":"102","severity":1,"message":"103","line":12,"column":55,"nodeType":"104","messageId":"105","endLine":12,"endColumn":57},{"ruleId":"102","severity":1,"message":"109","line":17,"column":25,"nodeType":"104","messageId":"105","endLine":17,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":43,"column":35,"nodeType":"104","messageId":"105","endLine":43,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":44,"column":15,"nodeType":"104","messageId":"105","endLine":44,"endColumn":17},{"ruleId":"110","severity":1,"message":"111","line":68,"column":13,"nodeType":"96","endLine":68,"endColumn":59},{"ruleId":"110","severity":1,"message":"111","line":115,"column":13,"nodeType":"96","endLine":115,"endColumn":59},{"ruleId":"110","severity":1,"message":"111","line":167,"column":13,"nodeType":"96","endLine":167,"endColumn":59},{"ruleId":"110","severity":1,"message":"111","line":44,"column":17,"nodeType":"96","endLine":47,"endColumn":19},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'classType' is assigned a value but never used.","'handleMiddleShift' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'height' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'NavItem' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]