{"ast":null,"code":"var _jsxFileName = \"/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"../components/map/mapStyles\";\nimport store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst MemoryMap = () => {\n  _s();\n\n  const s3URL = \"https://timur-dev-test.s3.ca-central-1.amazonaws.com/\";\n  const [zoom, setZoom] = useState(12);\n  const [newMarker, setNewMarker] = useState();\n  const [markers, setMarkers] = useState([]);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 43.6532,\n    lng: -79.3832\n  });\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n\n  const handleMapClick = event => {\n    console.log(event);\n    console.log(event.latLng.lat());\n    console.log(event.latLng.lng());\n    store.dispatch({\n      type: \"saveMarker\",\n      payload: {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      }\n    });\n    setNewMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const getMarkers = async () => {\n    const response = await fetch(\"/api/marker\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (data) {\n      console.log(data);\n      setMarkers(data);\n    }\n  };\n\n  useEffect(() => {\n    getMarkers();\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: {\n      width: \"100%\",\n      minHeight: \"100vh\",\n      height: \"auto\"\n    },\n    zoom: zoom,\n    center: mapCenter,\n    options: options,\n    onLoad: onMapLoad,\n    onClick: handleMapClick,\n    onZoomChanged: () => {\n      mapRef.current ? setZoom(mapRef.current.zoom) : console.log(\"map is loading\");\n    },\n    children: [newMarker ? /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: newMarker.lat,\n        lng: newMarker.lng\n      },\n      onClick: () => {\n        setNewMarker();\n      },\n      icon: {\n        url: `newMarker.svg`,\n        origin: new window.google.maps.Point(0, 0),\n        anchor: new window.google.maps.Point(20, 40),\n        scaledSize: new window.google.maps.Size(40, 40)\n      }\n    }, `${newMarker.lat}-${newMarker.lng}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : \"\", markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      onClick: () => {\n        setSelected(marker);\n        setMapCenter({\n          lat: marker.lat,\n          lng: marker.lng\n        });\n      },\n      icon: {\n        url: `marker.svg`,\n        origin: new window.google.maps.Point(0, 0),\n        anchor: new window.google.maps.Point(20, 40),\n        scaledSize: new window.google.maps.Size(40, 40)\n      }\n    }, `${marker.lat}-${marker.lng}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selected.lat,\n        lng: selected.lng\n      },\n      onCloseClick: () => {\n        setSelected(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bold900 text-start tooltipTitle\",\n          children: selected.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-start\",\n          children: selected.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), selected.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: s3URL + \"images/\" + selected._id,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this) : \"\", selected.audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: s3URL + \"audio/\" + selected._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemoryMap, \"VXsDu1ax5Da/PWxKR2F6wdQA9uk=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MemoryMap;\nexport default MemoryMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryMap\");","map":{"version":3,"sources":["/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","InfoWindow","mapStyles","store","libraries","options","styles","disableDefaultUI","zoomControl","MemoryMap","s3URL","zoom","setZoom","newMarker","setNewMarker","markers","setMarkers","isLoaded","loadError","googleMapsApiKey","selected","setSelected","mapCenter","setMapCenter","lat","lng","mapRef","useRef","onMapLoad","useCallback","map","current","handleMapClick","event","console","log","latLng","dispatch","type","payload","getMarkers","response","fetch","method","headers","Accept","data","json","width","minHeight","height","url","origin","window","google","maps","Point","anchor","scaledSize","Size","marker","location","message","image","_id","audio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport mapStyles from \"../components/map/mapStyles\";\nimport store from \"../store\"\n\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst MemoryMap = () => {\n  const s3URL = \"https://timur-dev-test.s3.ca-central-1.amazonaws.com/\";\n  const [zoom, setZoom] = useState(12);\n  const [newMarker, setNewMarker] = useState();\n  const [markers, setMarkers] = useState([]);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries,\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 43.6532,\n    lng: -79.3832,\n  });\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const handleMapClick = (event) => {\n    console.log(event);\n    console.log(event.latLng.lat());\n    console.log(event.latLng.lng());\n    store.dispatch({\n      type: \"saveMarker\",\n      payload: {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      }\n    })\n\n    setNewMarker({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n  };\n\n  const getMarkers = async () => {\n    const response = await fetch(\"/api/marker\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const data = await response.json();\n    if (data) {\n      console.log(data);\n      setMarkers(data);\n    }\n  };\n\n  useEffect(() => {\n    getMarkers();\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <GoogleMap\n      id=\"map\"\n      mapContainerStyle={{\n        width: \"100%\",\n        minHeight: \"100vh\",\n        height: \"auto\",\n      }}\n      zoom={zoom}\n      center={mapCenter}\n      options={options}\n      onLoad={onMapLoad}\n      onClick={handleMapClick}\n      onZoomChanged={() => {\n        mapRef.current\n          ? setZoom(mapRef.current.zoom)\n          : console.log(\"map is loading\");\n      }}\n    >\n      {newMarker ? (\n        <Marker\n          key={`${newMarker.lat}-${newMarker.lng}`}\n          position={{ lat: newMarker.lat, lng: newMarker.lng }}\n          onClick={() => {\n            setNewMarker();\n          }}\n          icon={{\n            url: `newMarker.svg`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(20, 40),\n            scaledSize: new window.google.maps.Size(40, 40),\n          }}\n        />\n      ) : (\n        \"\"\n      )}\n\n      {markers.map((marker) => (\n        <Marker\n          key={`${marker.lat}-${marker.lng}`}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          onClick={() => {\n            setSelected(marker);\n            setMapCenter({ lat: marker.lat, lng: marker.lng });\n          }}\n          icon={{\n            url: `marker.svg`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(20, 40),\n            scaledSize: new window.google.maps.Size(40, 40),\n          }}\n        />\n      ))}\n\n      {selected ? (\n        <InfoWindow\n          position={{ lat: selected.lat, lng: selected.lng }}\n          onCloseClick={() => {\n            setSelected(null);\n          }}\n        >\n          <div>\n            <p className=\"bold900 text-start tooltipTitle\">\n              {selected.location}\n            </p>\n            <hr />\n            <p className=\"text-start\">{selected.message}</p>\n            {selected.image ? (\n              <img src={s3URL + \"images/\" + selected._id} alt=\"img\" />\n            ) : (\n              \"\"\n            )}\n            {selected.audio ? (\n              <audio controls>\n                <source src={s3URL + \"audio/\" + selected._id} />\n              </audio>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  );\n};\n\nexport default MemoryMap;\n"]},"metadata":{},"sourceType":"module"}