{"ast":null,"code":"var _jsxFileName = \"/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { Row, Col } from \"react-bootstrap/\";\nimport storeData from \"../components/map/StoreData\";\nimport mapStyles from \"../components/map/mapStyles\";\nimport StoreCard from \"../components/map/StoreCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst StoreLocations = () => {\n  _s();\n\n  const [zoom, setZoom] = useState(12);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: -43.6532,\n    lng: 79.3832\n  });\n  console.log(mapCenter);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: {\n      width: \"100%\",\n      minHeight: \"600px\",\n      height: \"auto\"\n    },\n    zoom: zoom,\n    center: mapCenter,\n    options: options,\n    onLoad: onMapLoad,\n    onZoomChanged: () => {\n      mapRef.current ? setZoom(mapRef.current.zoom) : console.log(\"map is loading\");\n    },\n    children: [storeData.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      onClick: () => {\n        setSelected(marker);\n        setZoom(15);\n        setMapCenter({\n          lat: marker.lat,\n          lng: marker.lng\n        });\n      },\n      icon: {\n        url: `https://numee-kazakhstan.s3.eu-central-1.amazonaws.com/demo/logo numee.png`,\n        origin: new window.google.maps.Point(0, 0),\n        anchor: new window.google.maps.Point(30, 30),\n        scaledSize: new window.google.maps.Size(100, 20)\n      }\n    }, `${marker.lat}-${marker.lng}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selected.lat,\n        lng: selected.lng\n      },\n      onCloseClick: () => {\n        setSelected(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selected.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selected.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this), selected.tel.map(tel => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"d-block mb-2\",\n            href: \"tel:\" + tel,\n            children: tel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }, this);\n};\n\n_s(StoreLocations, \"apDugTcG0sahPvfZ+aUX9MR0tmQ=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = StoreLocations;\nexport default StoreLocations;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreLocations\");","map":{"version":3,"sources":["/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","Row","Col","storeData","mapStyles","StoreCard","libraries","options","styles","disableDefaultUI","zoomControl","StoreLocations","zoom","setZoom","isLoaded","loadError","googleMapsApiKey","selected","setSelected","mapCenter","setMapCenter","lat","lng","console","log","mapRef","useRef","onMapLoad","useCallback","map","current","width","minHeight","height","marker","url","origin","window","google","maps","Point","anchor","scaledSize","Size","name","address","tel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { Row, Col } from \"react-bootstrap/\";\nimport storeData from \"../components/map/StoreData\";\nimport mapStyles from \"../components/map/mapStyles\";\nimport StoreCard from \"../components/map/StoreCard\";\n\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst StoreLocations = () => {\n  const [zoom, setZoom] = useState(12);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries,\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: -43.6532,\n    lng: 79.3832,\n  });\n  console.log(mapCenter);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (<GoogleMap\n            id=\"map\"\n            mapContainerStyle={{\n              width: \"100%\",\n              minHeight: \"600px\",\n              height: \"auto\",\n            }}\n            zoom={zoom}\n            center={mapCenter}\n            options={options}\n            onLoad={onMapLoad}\n            onZoomChanged={() => {\n              mapRef.current\n                ? setZoom(mapRef.current.zoom)\n                : console.log(\"map is loading\");\n            }}\n          >\n            {storeData.map((marker) => (\n              <Marker\n                key={`${marker.lat}-${marker.lng}`}\n                position={{ lat: marker.lat, lng: marker.lng }}\n                onClick={() => {\n                  setSelected(marker);\n                  setZoom(15);\n                  setMapCenter({ lat: marker.lat, lng: marker.lng });\n                }}\n                icon={{\n                  url: `https://numee-kazakhstan.s3.eu-central-1.amazonaws.com/demo/logo numee.png`,\n                  origin: new window.google.maps.Point(0, 0),\n                  anchor: new window.google.maps.Point(30, 30),\n                  scaledSize: new window.google.maps.Size(100, 20),\n                }}\n              />\n            ))}\n\n            {selected ? (\n              <InfoWindow\n                position={{ lat: selected.lat, lng: selected.lng }}\n                onCloseClick={() => {\n                  setSelected(null);\n                }}\n              >\n                <div>\n                  <h4>{selected.name}</h4>\n                  <p>{selected.address}</p>\n                  {selected.tel.map((tel) => {\n                    return (\n                      <a className=\"d-block mb-2\" href={\"tel:\" + tel}>\n                        {tel}\n                      </a>\n                    );\n                  })}\n                </div>\n              </InfoWindow>\n            ) : null}\n          </GoogleMap>\n  );\n};\n\nexport default StoreLocations;"]},"metadata":{},"sourceType":"module"}