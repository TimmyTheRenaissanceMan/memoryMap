{"ast":null,"code":"var _jsxFileName = \"/home/timur/Documents/Work/Memory Map/client/src/routes/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Card } from \"react-bootstrap/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const [markers, setMarkers] = useState([]);\n  const s3URL = \"https://timur-dev-test.s3.ca-central-1.amazonaws.com/\";\n\n  const getMarkers = async () => {\n    const response = await fetch(\"/api/marker\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (data) {\n      console.log(data);\n      setMarkers(data);\n    }\n  };\n\n  useEffect(() => {\n    getMarkers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pe-5 ps-5\",\n    style: {\n      paddingTop: \"200px\"\n    },\n    children: markers.map((marker, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-start\",\n            children: [marker.location, \" by \", marker.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: marker.lat.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: marker.lng.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-start\",\n            children: marker.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), marker.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"float-start\",\n            src: s3URL + \"images/\" + marker._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this) : \"\", marker.audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: s3URL + \"audio/\" + marker._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/timur/Documents/Work/Memory Map/client/src/routes/List.jsx"],"names":["React","useState","useEffect","Container","Card","List","markers","setMarkers","s3URL","getMarkers","response","fetch","method","headers","Accept","data","json","console","log","paddingTop","map","marker","index","location","name","lat","toFixed","lng","message","image","_id","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMO,KAAK,GAAG,uDAAd;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFiC,KAAhB,CAA5B;AAOA,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;;AACA,QAAID,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAR,MAAAA,UAAU,CAACQ,IAAD,CAAV;AACD;AACF,GAbD;;AAeAb,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAiC,IAAA,KAAK,EAAE;AAAEU,MAAAA,UAAU,EAAE;AAAd,KAAxC;AAAA,cACGb,OAAO,CAACc,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,0BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,uBACGD,MAAM,CAACE,QADV,UACwBF,MAAM,CAACG,IAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,oCACE;AAAA,wBAAOH,MAAM,CAACI,GAAP,CAAWC,OAAX,CAAmB,CAAnB;AAAP;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAOL,MAAM,CAACM,GAAP,CAAWD,OAAX,CAAmB,CAAnB;AAAP;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,sBAA2BL,MAAM,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,kBARF,EASGP,MAAM,CAACQ,KAAP,gBACC;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,GAAG,EAAErB,KAAK,GAAG,SAAR,GAAoBa,MAAM,CAACS;AAFlC;AAAA;AAAA;AAAA;AAAA,kBADD,GAMC,EAfJ,EAiBGT,MAAM,CAACU,KAAP,gBACC;AAAO,YAAA,QAAQ,MAAf;AAAA,mCACE;AAAQ,cAAA,GAAG,EAAEvB,KAAK,GAAG,QAAR,GAAmBa,MAAM,CAACS;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,GAKC,EAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA6BD,KA9BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA1DD;;GAAMzB,I;;KAAAA,I;AA4DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Card } from \"react-bootstrap/\";\n\nconst List = () => {\n  const [markers, setMarkers] = useState([]);\n  const s3URL = \"https://timur-dev-test.s3.ca-central-1.amazonaws.com/\";\n\n  const getMarkers = async () => {\n    const response = await fetch(\"/api/marker\", {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const data = await response.json();\n    if (data) {\n      console.log(data);\n      setMarkers(data);\n    }\n  };\n\n  useEffect(() => {\n    getMarkers();\n  }, []);\n\n  return (\n    <Container className=\"pe-5 ps-5\" style={{ paddingTop: \"200px\" }}>\n      {markers.map((marker, index) => {\n        return (\n          <Card className=\"mt-3\">\n            <Card.Body>\n              <p className=\"text-start\">\n                {marker.location} by {marker.name}\n              </p>\n              <p className=\"text-start\">\n                <span>{marker.lat.toFixed(5)}</span>\n                <span>{marker.lng.toFixed(5)}</span>\n              </p>\n              <p className=\"text-start\">{marker.message}</p>\n              {marker.image ? (\n                <img\n                  className=\"float-start\"\n                  src={s3URL + \"images/\" + marker._id}\n                />\n              ) : (\n                \"\"\n              )}\n              {marker.audio ? (\n                <audio controls>\n                  <source src={s3URL + \"audio/\" + marker._id} />\n                </audio>\n              ) : (\n                \"\"\n              )}\n            </Card.Body>\n          </Card>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}