{"ast":null,"code":"var _jsxFileName = \"/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { Row, Col } from \"react-bootstrap/\";\nimport storeData from \"../components/Stores/StoreData\";\nimport mapStyles from \"../components/Stores/mapStyles\";\nimport StoreCard from \"../components/Stores/StoreCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst StoreLocations = () => {\n  _s();\n\n  const [zoom, setZoom] = useState(12);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: storeData[0].lat,\n    lng: storeData[0].lng\n  });\n  console.log(mapCenter);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-3 mt-5 mb-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"ms-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: \"4\",\n        lg: \"3\",\n        className: \"ps-0 pe-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            paddingLeft: \"16px\"\n          },\n          children: \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), storeData.map((data, index) => /*#__PURE__*/_jsxDEV(StoreCard, {\n          setSelected: setSelected,\n          setZoom: setZoom,\n          setMapCenter: setMapCenter,\n          data: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"8\",\n        lg: \"9\",\n        className: \"pe-0\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: \"map\",\n          mapContainerStyle: {\n            width: \"100%\",\n            minHeight: \"600px\",\n            height: \"40vw\"\n          },\n          zoom: zoom,\n          center: mapCenter,\n          options: options,\n          onLoad: onMapLoad,\n          onZoomChanged: () => {\n            mapRef.current ? setZoom(mapRef.current.zoom) : console.log(\"map is loading\");\n          },\n          children: [storeData.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: marker.lat,\n              lng: marker.lng\n            },\n            onClick: () => {\n              setSelected(marker);\n              setZoom(15);\n              setMapCenter({\n                lat: marker.lat,\n                lng: marker.lng\n              });\n            },\n            icon: {\n              url: `https://numee-kazakhstan.s3.eu-central-1.amazonaws.com/demo/logo numee.png`,\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(30, 30),\n              scaledSize: new window.google.maps.Size(100, 20)\n            }\n          }, `${marker.lat}-${marker.lng}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: selected.lat,\n              lng: selected.lng\n            },\n            onCloseClick: () => {\n              setSelected(null);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: selected.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selected.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), selected.tel.map(tel => {\n                return /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"d-block mb-2\",\n                  href: \"tel:\" + tel,\n                  children: tel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreLocations, \"rPOGz4xeUxphxRA0ZzvZfmwxfvU=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = StoreLocations;\nexport default StoreLocations;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreLocations\");","map":{"version":3,"sources":["/home/timur/Documents/Work/Memory Map/client/src/routes/Home.jsx"],"names":["React","useState","GoogleMap","useLoadScript","Marker","InfoWindow","Row","Col","storeData","mapStyles","StoreCard","libraries","options","styles","disableDefaultUI","zoomControl","StoreLocations","zoom","setZoom","isLoaded","loadError","googleMapsApiKey","selected","setSelected","mapCenter","setMapCenter","lat","lng","console","log","mapRef","useRef","onMapLoad","useCallback","map","current","paddingLeft","data","index","width","minHeight","height","marker","url","origin","window","google","maps","Point","anchor","scaledSize","Size","name","address","tel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { Row, Col } from \"react-bootstrap/\";\nimport storeData from \"../components/Stores/StoreData\";\nimport mapStyles from \"../components/Stores/mapStyles\";\nimport StoreCard from \"../components/Stores/StoreCard\";\n\nconst libraries = [\"places\"];\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst StoreLocations = () => {\n  const [zoom, setZoom] = useState(12);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBKVoeXaPLrEj3eDRpHEoJkIcDm_5XhnwU\",\n    libraries,\n  });\n  const [selected, setSelected] = useState(null);\n  const [mapCenter, setMapCenter] = useState({\n    lat: storeData[0].lat,\n    lng: storeData[0].lng,\n  });\n  console.log(mapCenter);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div class=\"px-3 mt-5 mb-5\">\n      <Row className=\"ms-3\">\n        <Col sm=\"4\" lg=\"3\" className=\"ps-0 pe-0\">\n          <h1 style={{ paddingLeft: \"16px\" }}>Магазины</h1>\n          {storeData.map((data, index) => (\n            <StoreCard\n              setSelected={setSelected}\n              setZoom={setZoom}\n              setMapCenter={setMapCenter}\n              data={data}\n              key={index}\n            />\n          ))}\n        </Col>\n        <Col sm=\"8\" lg=\"9\" className=\"pe-0\">\n          <GoogleMap\n            id=\"map\"\n            mapContainerStyle={{\n              width: \"100%\",\n              minHeight: \"600px\",\n              height: \"40vw\",\n            }}\n            zoom={zoom}\n            center={mapCenter}\n            options={options}\n            onLoad={onMapLoad}\n            onZoomChanged={() => {\n              mapRef.current\n                ? setZoom(mapRef.current.zoom)\n                : console.log(\"map is loading\");\n            }}\n          >\n            {storeData.map((marker) => (\n              <Marker\n                key={`${marker.lat}-${marker.lng}`}\n                position={{ lat: marker.lat, lng: marker.lng }}\n                onClick={() => {\n                  setSelected(marker);\n                  setZoom(15);\n                  setMapCenter({ lat: marker.lat, lng: marker.lng });\n                }}\n                icon={{\n                  url: `https://numee-kazakhstan.s3.eu-central-1.amazonaws.com/demo/logo numee.png`,\n                  origin: new window.google.maps.Point(0, 0),\n                  anchor: new window.google.maps.Point(30, 30),\n                  scaledSize: new window.google.maps.Size(100, 20),\n                }}\n              />\n            ))}\n\n            {selected ? (\n              <InfoWindow\n                position={{ lat: selected.lat, lng: selected.lng }}\n                onCloseClick={() => {\n                  setSelected(null);\n                }}\n              >\n                <div>\n                  <h4>{selected.name}</h4>\n                  <p>{selected.address}</p>\n                  {selected.tel.map((tel) => {\n                    return (\n                      <a className=\"d-block mb-2\" href={\"tel:\" + tel}>\n                        {tel}\n                      </a>\n                    );\n                  })}\n                </div>\n              </InfoWindow>\n            ) : null}\n          </GoogleMap>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default StoreLocations;"]},"metadata":{},"sourceType":"module"}