{"ast":null,"code":"var _jsxFileName = \"/home/timur/Documents/Work/Memory Map/client/src/components/partials/sideNavBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideNavBar() {\n  _s();\n\n  const [activeMenu, setActiveMenu] = useState('main');\n  const [menuHeight, setMenuHeight] = useState(null);\n  const dropdownRef = useRef(null);\n  const [classType, setClassType] = useState(\"\");\n\n  const handleMiddleShift = direction => {\n    direction == \"back\" ? setClassType(\"menu-primary\") : setClassType(\"menuSecondary\");\n  };\n\n  useEffect(() => {\n    var _dropdownRef$current, _dropdownRef$current2;\n\n    const height = (_dropdownRef$current = dropdownRef.current) === null || _dropdownRef$current === void 0 ? void 0 : _dropdownRef$current.firstChild.offsetHeight;\n    setMenuHeight((_dropdownRef$current2 = dropdownRef.current) === null || _dropdownRef$current2 === void 0 ? void 0 : _dropdownRef$current2.firstChild.offsetHeight);\n  }, []);\n\n  function DropdownItem(props) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: props.href,\n      className: \"menu-item\",\n      onClick: () => {\n        if (props.goToMenu == \"main\") {\n          setClassType(\"menu-secondary\", setActiveMenu(props.goToMenu));\n        } else if (props.toThirdMenu) {\n          console.log('here');\n          setClassType(\"menu-primary\", setActiveMenu(props.goToMenu));\n        } else {\n          props.goToMenu && setActiveMenu(props.goToMenu);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon-button\",\n        children: props.leftIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), props.children, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon-right\",\n        children: props.rightIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    style: {\n      height: menuHeight\n    },\n    ref: dropdownRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }, this);\n}\n\n_s(SideNavBar, \"wRr1nvVnOw0raaoQ11NKxgiVt60=\");\n\n_c = SideNavBar;\nexport default SideNavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavBar\");","map":{"version":3,"sources":["/home/timur/Documents/Work/Memory Map/client/src/components/partials/sideNavBar.jsx"],"names":["React","useState","useEffect","useRef","CSSTransition","SideNavBar","activeMenu","setActiveMenu","menuHeight","setMenuHeight","dropdownRef","classType","setClassType","handleMiddleShift","direction","height","current","firstChild","offsetHeight","DropdownItem","props","href","goToMenu","toThirdMenu","console","log","leftIcon","children","rightIcon"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMS,WAAW,GAAGP,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMY,iBAAiB,GAAIC,SAAD,IAAe;AACrCA,IAAAA,SAAS,IAAI,MAAb,GAAsBF,YAAY,CAAC,cAAD,CAAlC,GAAqDA,YAAY,CAAC,eAAD,CAAjE;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMa,MAAM,2BAAGL,WAAW,CAACM,OAAf,yDAAG,qBAAqBC,UAArB,CAAgCC,YAA/C;AACAT,IAAAA,aAAa,0BAACC,WAAW,CAACM,OAAb,0DAAC,sBAAqBC,UAArB,CAAgCC,YAAjC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;;AAQA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,wBACE;AAAG,MAAA,IAAI,EAAEA,KAAK,CAACC,IAAf;AAAqB,MAAA,SAAS,EAAC,WAA/B;AAA2C,MAAA,OAAO,EAAE,MAAM;AACtD,YAAGD,KAAK,CAACE,QAAN,IAAkB,MAArB,EAA4B;AACxBV,UAAAA,YAAY,CAAC,gBAAD,EACRL,aAAa,CAACa,KAAK,CAACE,QAAP,CADL,CAAZ;AAGH,SAJD,MAIO,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAb,UAAAA,YAAY,CAAC,cAAD,EACRL,aAAa,CAACa,KAAK,CAACE,QAAP,CADL,CAAZ;AAGH,SALM,MAKD;AACFF,UAAAA,KAAK,CAACE,QAAN,IAAkBf,aAAa,CAACa,KAAK,CAACE,QAAP,CAA/B;AACC;AACJ,OAbL;AAAA,8BAeE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BF,KAAK,CAACM;AAArC;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBGN,KAAK,CAACO,QAhBT,eAiBE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAA8BP,KAAK,CAACQ;AAApC;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEb,MAAAA,MAAM,EAAEP;AAAV,KAAjC;AAAyD,IAAA,GAAG,EAAEE;AAA9D;AAAA;AAAA;AAAA;AAAA,UADF;AAMP;;GAhDQL,U;;KAAAA,U;AAkDT,eAAeA,UAAf","sourcesContent":["\n  \nimport React, { useState, useEffect, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction SideNavBar() {\n        const [activeMenu, setActiveMenu] = useState('main');\n        const [menuHeight, setMenuHeight] = useState(null);\n        const dropdownRef = useRef(null);\n        const [classType, setClassType] = useState(\"\");\n\n        const handleMiddleShift = (direction) => {\n            direction == \"back\" ? setClassType(\"menu-primary\") : setClassType(\"menuSecondary\");\n        } \n      \n        useEffect(() => {\n          const height = dropdownRef.current?.firstChild.offsetHeight;\n          setMenuHeight(dropdownRef.current?.firstChild.offsetHeight)\n        }, [])\n      \n\n\n      \n        function DropdownItem(props) {\n          return (\n            <a href={props.href} className=\"menu-item\" onClick={() => {\n                if(props.goToMenu == \"main\"){\n                    setClassType(\"menu-secondary\",\n                        setActiveMenu(props.goToMenu)\n                    );\n                } else if(props.toThirdMenu){\n                    console.log('here')\n                    setClassType(\"menu-primary\",\n                        setActiveMenu(props.goToMenu)\n                    );\n                } else{\n                    props.goToMenu && setActiveMenu(props.goToMenu);\n                    }\n                }\n            }>\n              <span className=\"icon-button\">{props.leftIcon}</span>\n              {props.children}\n              <span className=\"icon-right\">{props.rightIcon}</span>\n            </a>\n          );\n        }\n      \n        return (\n          <div className=\"dropdown\" style={{ height: menuHeight }} ref={dropdownRef}>\n      \n\n          </div>\n        );\n}\n\nexport default SideNavBar;"]},"metadata":{},"sourceType":"module"}